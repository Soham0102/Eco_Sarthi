{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n//   // location select handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Try again.\");\n//     }\n//   };\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         {/* Location Autocomplete */}\n//         <PlacesAutocomplete\n//           value={formData.location}\n//           onChange={(address) => setFormData({ ...formData, location: address })}\n//           onSelect={handleSelect}\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n//         >\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//             <div>\n//               <input\n//                 {...getInputProps({\n//                   placeholder: \"Search Location (India only)\",\n//                   className: \"w-full border px-3 py-2 rounded\",\n//                 })}\n//               />\n//               <div className=\"border rounded bg-white mt-1\">\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                 {suggestions.map((suggestion) => {\n//                   const className = suggestion.active\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\n//                     : \"p-2 cursor-pointer\";\n//                   return (\n//                     <div\n//                       {...getSuggestionItemProps(suggestion, { className })}\n//                       key={suggestion.placeId}\n//                     >\n//                       {suggestion.description}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             </div>\n//           )}\n//         </PlacesAutocomplete>\n//         {/* Department */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n//         {/* Urgency */}\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n//         {/* Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React,{useState,createElement as _createElement}from\"react\";import axios from\"axios\";import PlacesAutocomplete,{geocodeByAddress,getLatLng}from\"react-places-autocomplete\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ComplaintForm(){const[formData,setFormData]=useState({name:\"\",complaint:\"\",location:\"\",urgency:\"normal\",department:\"\"});const[photo,setPhoto]=useState(null);const[complaintId,setComplaintId]=useState(null);const[submitted,setSubmitted]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const[liveCoords,setLiveCoords]=useState(null);const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handlePhotoChange=e=>{if(e.target.files&&e.target.files[0]){setPhoto(e.target.files[0]);}};// Google Places Autocomplete handler\nconst handleSelect=async address=>{setFormData({...formData,location:address});setLiveCoords(null);// Clear live coords if user selects an address\ntry{const results=await geocodeByAddress(address);const latLng=await getLatLng(results[0]);console.log(\"Selected Location Coordinates: \",latLng);// You can store these coords in state if your backend needs them\n}catch(error){console.error(\"Error fetching coordinates\",error);}};// Live location button handler\nconst handleLiveLocation=()=>{if(!navigator.geolocation){alert(\"Geolocation is not supported by your browser.\");return;}setIsSubmitting(true);navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;setLiveCoords({latitude,longitude});setFormData({...formData,location:\"Live Location Captured\"});alert(\"Live location successfully captured!\");setIsSubmitting(false);},error=>{console.warn(\"Geolocation error:\",error);alert(\"âš  Location not available. Please enable GPS for accurate location.\");setLiveCoords(null);setIsSubmitting(false);},{enableHighAccuracy:true,timeout:15000,maximumAge:0});};const handleSubmit=async e=>{e.preventDefault();setIsSubmitting(true);try{const formDataToSend=new FormData();Object.keys(formData).forEach(key=>{formDataToSend.append(key,formData[key]);});if(photo){formDataToSend.append(\"photo\",photo);}// Logic to determine which location to send\nlet latLng=null;if(liveCoords){// Option 1: Live location is captured\nlatLng=liveCoords;}else if(formData.location){// Option 2: User typed and selected a location\nconst results=await geocodeByAddress(formData.location);latLng=await getLatLng(results[0]);}if(latLng){formDataToSend.append(\"latitude\",latLng.latitude);formDataToSend.append(\"longitude\",latLng.longitude);}const res=await axios.post(\"http://localhost:5000/api/complaint\",formDataToSend,{headers:{\"Content-Type\":\"multipart/form-data\"}});setComplaintId(res.data.complaint.complaintId);setSubmitted(true);alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);// Reset form\nsetFormData({name:\"\",complaint:\"\",location:\"\",urgency:\"normal\",department:\"\"});setPhoto(null);setLiveCoords(null);}catch(err){console.error(\"Submission failed:\",err.message);alert(\"Complaint submission failed. Please try again.\");}finally{setIsSubmitting(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Complaint Form\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"name\",value:formData.name,onChange:handleChange,placeholder:\"Your Name\",required:true,className:\"w-full border px-3 py-2 rounded\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"complaint\",value:formData.complaint,onChange:handleChange,placeholder:\"Describe your complaint\",required:true,className:\"w-full border px-3 py-2 rounded\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Location\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(PlacesAutocomplete,{value:formData.location,onChange:address=>{setFormData({...formData,location:address});setLiveCoords(null);},onSelect:handleSelect,searchOptions:{componentRestrictions:{country:[\"in\"]}},children:_ref=>{let{getInputProps,suggestions,getSuggestionItemProps,loading}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full\",children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps({placeholder:\"Search Location...\",className:\"w-full border px-3 py-2 rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded bg-white mt-1\",children:[loading&&/*#__PURE__*/_jsx(\"div\",{className:\"p-2 text-gray-500\",children:\"Loading...\"}),suggestions.map(suggestion=>{const className=suggestion.active?\"p-2 bg-blue-100 cursor-pointer\":\"p-2 cursor-pointer\";return/*#__PURE__*/_createElement(\"div\",{...getSuggestionItemProps(suggestion,{className}),key:suggestion.placeId},suggestion.description);})]})]});}}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleLiveLocation,disabled:isSubmitting,className:`px-4 py-2 rounded text-sm text-white ${isSubmitting?\"bg-gray-400\":\"bg-blue-600\"}`,children:\"Live\"})]}),liveCoords&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-green-600 mt-1\",children:[\"Live Location: \",liveCoords.latitude.toFixed(4),\", \",liveCoords.longitude.toFixed(4)]})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"department\",value:formData.department,onChange:handleChange,className:\"w-full border px-3 py-2 rounded\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Department\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Public Works\",children:\"Public Works\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Water Supply\",children:\"Water Supply\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sanitation\",children:\"Sanitation\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Electricity\",children:\"Electricity\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"urgency\",value:formData.urgency,onChange:handleChange,className:\"w-full border px-3 py-2 rounded\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"normal\",children:\"Normal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"urgent\",children:\"Urgent\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Upload / Capture Photo\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",capture:\"environment\",onChange:handlePhotoChange,className:\"w-full border px-3 py-2 rounded\"}),photo&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Selected: \",photo.name]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,className:`w-full ${isSubmitting?\"bg-gray-400\":\"bg-blue-600\"} text-white px-4 py-2 rounded hover:bg-blue-700`,children:isSubmitting?\"Submitting...\":\"Submit Complaint\"})]}),submitted&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 text-green-700 font-semibold\",children:[\"Complaint submitted successfully!\",/*#__PURE__*/_jsx(\"br\",{}),\"Your Complaint ID: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:complaintId})]})]});}","map":{"version":3,"names":["React","useState","createElement","_createElement","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsx","_jsx","jsxs","_jsxs","ComplaintForm","formData","setFormData","name","complaint","location","urgency","department","photo","setPhoto","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","liveCoords","setLiveCoords","handleChange","e","target","value","handlePhotoChange","files","handleSelect","address","results","latLng","console","log","error","handleLiveLocation","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","warn","enableHighAccuracy","timeout","maximumAge","handleSubmit","preventDefault","formDataToSend","FormData","Object","keys","forEach","key","append","res","post","headers","data","err","message","className","children","onSubmit","onChange","placeholder","required","onSelect","searchOptions","componentRestrictions","country","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","placeId","description","type","onClick","disabled","toFixed","accept","capture"],"sources":["C:/Users/Lenovo/Documents/EcoSarthi-main/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // location select handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Autocomplete */}\n//         <PlacesAutocomplete\n//           value={formData.location}\n//           onChange={(address) => setFormData({ ...formData, location: address })}\n//           onSelect={handleSelect}\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n//         >\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//             <div>\n//               <input\n//                 {...getInputProps({\n//                   placeholder: \"Search Location (India only)\",\n//                   className: \"w-full border px-3 py-2 rounded\",\n//                 })}\n//               />\n//               <div className=\"border rounded bg-white mt-1\">\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                 {suggestions.map((suggestion) => {\n//                   const className = suggestion.active\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\n//                     : \"p-2 cursor-pointer\";\n//                   return (\n//                     <div\n//                       {...getSuggestionItemProps(suggestion, { className })}\n//                       key={suggestion.placeId}\n//                     >\n//                       {suggestion.description}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             </div>\n//           )}\n//         </PlacesAutocomplete>\n\n//         {/* Department */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         {/* Urgency */}\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         {/* Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nexport default function ComplaintForm() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    complaint: \"\",\n    location: \"\",\n    urgency: \"normal\",\n    department: \"\",\n  });\n\n  const [photo, setPhoto] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handlePhotoChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n\n  // Google Places Autocomplete handler\n  const handleSelect = async (address) => {\n    setFormData({ ...formData, location: address });\n    setLiveCoords(null); // Clear live coords if user selects an address\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      console.log(\"Selected Location Coordinates: \", latLng);\n      // You can store these coords in state if your backend needs them\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n\n  // Live location button handler\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setLiveCoords({ latitude, longitude });\n        setFormData({ ...formData, location: \"Live Location Captured\" });\n        alert(\"Live location successfully captured!\");\n        setIsSubmitting(false);\n      },\n      (error) => {\n        console.warn(\"Geolocation error:\", error);\n        alert(\"âš  Location not available. Please enable GPS for accurate location.\");\n        setLiveCoords(null);\n        setIsSubmitting(false);\n      },\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const formDataToSend = new FormData();\n      Object.keys(formData).forEach((key) => {\n        formDataToSend.append(key, formData[key]);\n      });\n\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n\n      // Logic to determine which location to send\n      let latLng = null;\n      if (liveCoords) {\n        // Option 1: Live location is captured\n        latLng = liveCoords;\n      } else if (formData.location) {\n        // Option 2: User typed and selected a location\n        const results = await geocodeByAddress(formData.location);\n        latLng = await getLatLng(results[0]);\n      }\n\n      if (latLng) {\n        formDataToSend.append(\"latitude\", latLng.latitude);\n        formDataToSend.append(\"longitude\", latLng.longitude);\n      }\n\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      setComplaintId(res.data.complaint.complaintId);\n      setSubmitted(true);\n      alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n\n      // Reset form\n      setFormData({\n        name: \"\",\n        complaint: \"\",\n        location: \"\",\n        urgency: \"normal\",\n        department: \"\",\n      });\n      setPhoto(null);\n      setLiveCoords(null);\n    } catch (err) {\n      console.error(\"Submission failed:\", err.message);\n      alert(\"Complaint submission failed. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Input fields */}\n        <input\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          placeholder=\"Your Name\"\n          required\n          className=\"w-full border px-3 py-2 rounded\"\n        />\n        <textarea\n          name=\"complaint\"\n          value={formData.complaint}\n          onChange={handleChange}\n          placeholder=\"Describe your complaint\"\n          required\n          className=\"w-full border px-3 py-2 rounded\"\n        />\n\n        {/* Location Section */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Location\n          </label>\n          <div className=\"flex gap-2\">\n            <PlacesAutocomplete\n              value={formData.location}\n              onChange={(address) => {\n                setFormData({ ...formData, location: address });\n                setLiveCoords(null);\n              }}\n              onSelect={handleSelect}\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n            >\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                <div className=\"w-full\">\n                  <input\n                    {...getInputProps({\n                      placeholder: \"Search Location...\",\n                      className: \"w-full border px-3 py-2 rounded\",\n                    })}\n                  />\n                  <div className=\"border rounded bg-white mt-1\">\n                    {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n                    {suggestions.map((suggestion) => {\n                      const className = suggestion.active\n                        ? \"p-2 bg-blue-100 cursor-pointer\"\n                        : \"p-2 cursor-pointer\";\n                      return (\n                        <div\n                          {...getSuggestionItemProps(suggestion, { className })}\n                          key={suggestion.placeId}\n                        >\n                          {suggestion.description}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </PlacesAutocomplete>\n            <button\n              type=\"button\"\n              onClick={handleLiveLocation}\n              disabled={isSubmitting}\n              className={`px-4 py-2 rounded text-sm text-white ${\n                isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n              }`}\n            >\n              Live\n            </button>\n          </div>\n          {liveCoords && (\n            <p className=\"text-xs text-green-600 mt-1\">\n              Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n            </p>\n          )}\n        </div>\n\n        {/* Other form elements */}\n        <select\n          name=\"department\"\n          value={formData.department}\n          onChange={handleChange}\n          className=\"w-full border px-3 py-2 rounded\"\n          required\n        >\n          <option value=\"\">Select a Department</option>\n          <option value=\"Public Works\">Public Works</option>\n          <option value=\"Water Supply\">Water Supply</option>\n          <option value=\"Sanitation\">Sanitation</option>\n          <option value=\"Electricity\">Electricity</option>\n          <option value=\"Other\">Other</option>\n        </select>\n\n        <select\n          name=\"urgency\"\n          value={formData.urgency}\n          onChange={handleChange}\n          className=\"w-full border px-3 py-2 rounded\"\n        >\n          <option value=\"normal\">Normal</option>\n          <option value=\"urgent\">Urgent</option>\n        </select>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Upload / Capture Photo\n          </label>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            capture=\"environment\"\n            onChange={handlePhotoChange}\n            className=\"w-full border px-3 py-2 rounded\"\n          />\n          {photo && (\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className={`w-full ${\n            isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n          } text-white px-4 py-2 rounded hover:bg-blue-700`}\n        >\n          {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n        </button>\n      </form>\n\n      {submitted && (\n        <div className=\"mt-6 text-green-700 font-semibold\">\n          Complaint submitted successfully!<br />\n          Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n        </div>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\janta_voice_final\\\\janta_voice_final\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // location select handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Autocomplete */}\n//         <PlacesAutocomplete\n//           value={formData.location}\n//           onChange={(address) => setFormData({ ...formData, location: address })}\n//           onSelect={handleSelect}\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n//         >\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//             <div>\n//               <input\n//                 {...getInputProps({\n//                   placeholder: \"Search Location (India only)\",\n//                   className: \"w-full border px-3 py-2 rounded\",\n//                 })}\n//               />\n//               <div className=\"border rounded bg-white mt-1\">\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                 {suggestions.map((suggestion) => {\n//                   const className = suggestion.active\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\n//                     : \"p-2 cursor-pointer\";\n//                   return (\n//                     <div\n//                       {...getSuggestionItemProps(suggestion, { className })}\n//                       key={suggestion.placeId}\n//                     >\n//                       {suggestion.description}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             </div>\n//           )}\n//         </PlacesAutocomplete>\n\n//         {/* Department */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         {/* Urgency */}\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         {/* Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// We don't need these imports anymore since we're not using PlacesAutocomplete.\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    complaint: \"\",\n    location: \"\",\n    // We will now get the location from live coordinates\n    urgency: \"normal\",\n    department: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const submitToServer = async coords => {\n      try {\n        const formDataToSend = new FormData();\n        Object.keys(formData).forEach(key => {\n          formDataToSend.append(key, formData[key]);\n        });\n        if (photo) {\n          formDataToSend.append(\"photo\", photo);\n        }\n        if (coords) {\n          formDataToSend.append(\"latitude\", coords.latitude);\n          formDataToSend.append(\"longitude\", coords.longitude);\n        }\n        const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        setComplaintId(res.data.complaint.complaintId);\n        setSubmitted(true);\n        setFormData({\n          name: \"\",\n          complaint: \"\",\n          location: \"\",\n          urgency: \"normal\",\n          department: \"\"\n        });\n        setPhoto(null);\n        alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n      } catch (err) {\n        console.error(\"Submission failed:\", err.message);\n        alert(\"Complaint submission failed. Please try again.\");\n      } finally {\n        setIsSubmitting(false);\n      }\n    };\n\n    // --- Live Location Capture Logic from the other component ---\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser. Submitting without location.\");\n      await submitToServer(null);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      await submitToServer({\n        latitude,\n        longitude\n      });\n    }, async error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"âš  Location not available. Submitting without location data.\");\n      await submitToServer(null);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Complaint Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Your Name\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"complaint\",\n        value: formData.complaint,\n        onChange: handleChange,\n        placeholder: \"Describe your complaint\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Your location will be automatically captured upon submission.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"department\",\n        value: formData.department,\n        onChange: handleChange,\n        className: \"w-full border px-3 py-2 rounded\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Public Works\",\n          children: \"Public Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Water Supply\",\n          children: \"Water Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sanitation\",\n          children: \"Sanitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Electricity\",\n          children: \"Electricity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"urgency\",\n        value: formData.urgency,\n        onChange: handleChange,\n        className: \"w-full border px-3 py-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"normal\",\n          children: \"Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"urgent\",\n          children: \"Urgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Upload / Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          capture: \"environment\",\n          onChange: handlePhotoChange,\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), photo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Selected: \", photo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: `w-full ${isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"} text-white px-4 py-2 rounded font-semibold`,\n        children: isSubmitting ? \"Submitting...\" : \"Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-green-700 font-semibold\",\n      children: [\"Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 44\n      }, this), \"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: complaintId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"bRMlnQoTUp7Zjy+ffIDR6RZCNgw=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","name","complaint","location","urgency","department","photo","setPhoto","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","handleChange","e","target","value","handlePhotoChange","files","handleSubmit","preventDefault","submitToServer","coords","formDataToSend","FormData","Object","keys","forEach","key","append","latitude","longitude","res","post","headers","data","alert","err","console","error","message","navigator","geolocation","getCurrentPosition","position","warn","enableHighAccuracy","timeout","maximumAge","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","type","accept","capture","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/janta_voice_final/janta_voice_final/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   // location select handler\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       const latLng = await getLatLng(results[0]);\r\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       Object.keys(formData).forEach((key) => {\r\n//         formDataToSend.append(key, formData[key]);\r\n//       });\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       setComplaintId(res.data.complaint.complaintId);\r\n//       setSubmitted(true);\r\n\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\",\r\n//         urgency: \"normal\",\r\n//         department: \"\",\r\n//       });\r\n//       setPhoto(null);\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed. Try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Your Name\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Describe your complaint\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n\r\n//         {/* Location Autocomplete */}\r\n//         <PlacesAutocomplete\r\n//           value={formData.location}\r\n//           onChange={(address) => setFormData({ ...formData, location: address })}\r\n//           onSelect={handleSelect}\r\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\r\n//         >\r\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//             <div>\r\n//               <input\r\n//                 {...getInputProps({\r\n//                   placeholder: \"Search Location (India only)\",\r\n//                   className: \"w-full border px-3 py-2 rounded\",\r\n//                 })}\r\n//               />\r\n//               <div className=\"border rounded bg-white mt-1\">\r\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                 {suggestions.map((suggestion) => {\r\n//                   const className = suggestion.active\r\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                     : \"p-2 cursor-pointer\";\r\n//                   return (\r\n//                     <div\r\n//                       {...getSuggestionItemProps(suggestion, { className })}\r\n//                       key={suggestion.placeId}\r\n//                     >\r\n//                       {suggestion.description}\r\n//                     </div>\r\n//                   );\r\n//                 })}\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </PlacesAutocomplete>\r\n\r\n//         {/* Department */}\r\n//         <select\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a Department</option>\r\n//           <option value=\"Public Works\">Public Works</option>\r\n//           <option value=\"Water Supply\">Water Supply</option>\r\n//           <option value=\"Sanitation\">Sanitation</option>\r\n//           <option value=\"Electricity\">Electricity</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n\r\n//         {/* Urgency */}\r\n//         <select\r\n//           name=\"urgency\"\r\n//           value={formData.urgency}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         >\r\n//           <option value=\"normal\">Normal</option>\r\n//           <option value=\"urgent\">Urgent</option>\r\n//         </select>\r\n\r\n//         {/* Photo Upload */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             capture=\"environment\"\r\n//             onChange={handlePhotoChange}\r\n//             className=\"w-full border px-3 py-2 rounded\"\r\n//           />\r\n//           {photo && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n// We don't need these imports anymore since we're not using PlacesAutocomplete.\r\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    complaint: \"\",\r\n    location: \"\", // We will now get the location from live coordinates\r\n    urgency: \"normal\",\r\n    department: \"\",\r\n  });\r\n\r\n  const [photo, setPhoto] = useState(null);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePhotoChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setPhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n\r\n    const submitToServer = async (coords) => {\r\n      try {\r\n        const formDataToSend = new FormData();\r\n        Object.keys(formData).forEach((key) => {\r\n          formDataToSend.append(key, formData[key]);\r\n        });\r\n\r\n        if (photo) {\r\n          formDataToSend.append(\"photo\", photo);\r\n        }\r\n\r\n        if (coords) {\r\n          formDataToSend.append(\"latitude\", coords.latitude);\r\n          formDataToSend.append(\"longitude\", coords.longitude);\r\n        }\r\n\r\n        const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n        setComplaintId(res.data.complaint.complaintId);\r\n        setSubmitted(true);\r\n\r\n        setFormData({\r\n          name: \"\",\r\n          complaint: \"\",\r\n          location: \"\",\r\n          urgency: \"normal\",\r\n          department: \"\",\r\n        });\r\n        setPhoto(null);\r\n        alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\r\n      } catch (err) {\r\n        console.error(\"Submission failed:\", err.message);\r\n        alert(\"Complaint submission failed. Please try again.\");\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    };\r\n\r\n    // --- Live Location Capture Logic from the other component ---\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser. Submitting without location.\");\r\n      await submitToServer(null);\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        await submitToServer({ latitude, longitude });\r\n      },\r\n      async (error) => {\r\n        console.warn(\"Geolocation error:\", error);\r\n        alert(\"âš  Location not available. Submitting without location data.\");\r\n        await submitToServer(null);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Your Name\"\r\n          required\r\n          className=\"w-full border px-3 py-2 rounded\"\r\n        />\r\n        <textarea\r\n          name=\"complaint\"\r\n          value={formData.complaint}\r\n          onChange={handleChange}\r\n          placeholder=\"Describe your complaint\"\r\n          required\r\n          className=\"w-full border px-3 py-2 rounded\"\r\n        />\r\n\r\n        {/* Since we're using live location, we no longer need the Places Autocomplete input */}\r\n        <p className=\"text-sm text-gray-500\">Your location will be automatically captured upon submission.</p>\r\n\r\n        {/* Department */}\r\n        <select\r\n          name=\"department\"\r\n          value={formData.department}\r\n          onChange={handleChange}\r\n          className=\"w-full border px-3 py-2 rounded\"\r\n          required\r\n        >\r\n          <option value=\"\">Select a Department</option>\r\n          <option value=\"Public Works\">Public Works</option>\r\n          <option value=\"Water Supply\">Water Supply</option>\r\n          <option value=\"Sanitation\">Sanitation</option>\r\n          <option value=\"Electricity\">Electricity</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n\r\n        {/* Urgency */}\r\n        <select\r\n          name=\"urgency\"\r\n          value={formData.urgency}\r\n          onChange={handleChange}\r\n          className=\"w-full border px-3 py-2 rounded\"\r\n        >\r\n          <option value=\"normal\">Normal</option>\r\n          <option value=\"urgent\">Urgent</option>\r\n        </select>\r\n\r\n        {/* Photo Upload */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Upload / Capture Photo\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            capture=\"environment\"\r\n            onChange={handlePhotoChange}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n          {photo && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className={`w-full ${\r\n            isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n          } text-white px-4 py-2 rounded font-semibold`}\r\n        >\r\n          {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n        </button>\r\n      </form>\r\n\r\n      {submitted && (\r\n        <div className=\"mt-6 text-green-700 font-semibold\">\r\n          Complaint submitted successfully!<br />\r\n          Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IAAE;IACdC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_final\\\\frontend\\\\src\\\\pages\\\\Policies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"नमस्ते! मैं आपकी सहायता के लिए यहां हूँ। कृपया अपना सवाल पूछें।\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      var _response$data$candid, _response$data$candid2, _response$data$candid3, _response$data$candid4, _response$data$candid5;\n      const response = await axios.post(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyB0XIeP2uRbrdzdI3KsC4b7w9XhMJwhVRo\", {\n        contents: [{\n          role: \"user\",\n          parts: [{\n            text: 'आप एक सहायक हैं जो भारत सरकार की योजनाओं की जानकारी बहुत ही सरल हिंदी में गरीब लोगों को समझाते हैं।\\n\\nसवाल: ${input}\\n\\nकृपया उत्तर आसान हिंदी में दें।'\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.7,\n          maxOutputTokens: 512\n        }\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const botReply = ((_response$data$candid = response.data.candidates) === null || _response$data$candid === void 0 ? void 0 : (_response$data$candid2 = _response$data$candid[0]) === null || _response$data$candid2 === void 0 ? void 0 : (_response$data$candid3 = _response$data$candid2.content) === null || _response$data$candid3 === void 0 ? void 0 : (_response$data$candid4 = _response$data$candid3.parts) === null || _response$data$candid4 === void 0 ? void 0 : (_response$data$candid5 = _response$data$candid4[0]) === null || _response$data$candid5 === void 0 ? void 0 : _response$data$candid5.text) || \"माफ़ कीजिए, उत्तर नहीं मिल पाया।\";\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: botReply\n      }]);\n    } catch (error) {\n      console.error(\"Gemini API Error:\", error);\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: \"माफ़ कीजिए, कुछ गलत हो गया। कृपया बाद में कोशिश करें।\"\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition not supported in this browser.\");\n      return;\n    }\n    if (recognitionRef.current) {\n      recognitionRef.current.stop();\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"hi-IN\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onstart = () => {\n      setListening(true);\n    };\n    recognition.onresult = event => {\n      const speechToText = event.results[0][0].transcript;\n      setInput(prevInput => prevInput + \" \" + speechToText);\n    };\n    recognition.onerror = event => {\n      console.error(\"Voice recognition error:\", event.error);\n    };\n    recognition.onend = () => {\n      setListening(false);\n    };\n    recognitionRef.current = recognition;\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white shadow-lg rounded-xl p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-green-700 text-center mb-6\",\n        children: \"\\uD83D\\uDCAC \\u0938\\u0939\\u093E\\u092F\\u0924\\u093E \\u091A\\u0948\\u091F\\u092C\\u0949\\u091F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-96 overflow-y-auto space-y-4 bg-gray-50 p-4 rounded-md border\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-md max-w-xs whitespace-pre-wrap ${msg.sender === \"user\" ? \"bg-green-200 ml-auto text-right\" : \"bg-white text-left\"}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"\\u0909\\u0924\\u094D\\u0924\\u0930 \\u0906 \\u0930\\u0939\\u093E \\u0939\\u0948...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 border border-gray-300 rounded-l-md px-4 py-2 focus:outline-none\",\n          placeholder: \"\\u0905\\u092A\\u0928\\u093E \\u0938\\u0935\\u093E\\u0932 \\u0932\\u093F\\u0916\\u0947\\u0902...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startListening,\n          className: `bg-yellow-500 text-white px-4 py-2 ${listening ? \"animate-pulse\" : \"\"}`,\n          title: \"Speak\",\n          children: \"\\uD83C\\uDF99\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"bg-green-600 text-white px-6 py-2 rounded-r-md hover:bg-green-700\",\n          children: \"\\u092D\\u0947\\u091C\\u0947\\u0902\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"C6ZqzBt0kUwwmYiQbL/KuXj0CpM=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","sender","text","input","setInput","loading","setLoading","listening","setListening","recognitionRef","sendMessage","trim","userMessage","newMessages","_response$data$candid","_response$data$candid2","_response$data$candid3","_response$data$candid4","_response$data$candid5","response","post","contents","role","parts","generationConfig","temperature","maxOutputTokens","headers","botReply","data","candidates","content","error","console","handleKeyDown","e","key","startListening","SpeechRecognition","window","webkitSpeechRecognition","alert","current","stop","recognition","lang","interimResults","maxAlternatives","onstart","onresult","event","speechToText","results","transcript","prevInput","onerror","onend","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","placeholder","value","onChange","target","onKeyDown","onClick","title","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_final/frontend/src/pages/Policies.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      sender: \"bot\",\r\n      text: \"नमस्ते! मैं आपकी सहायता के लिए यहां हूँ। कृपया अपना सवाल पूछें।\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [listening, setListening] = useState(false);\r\n\r\n  const recognitionRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    const newMessages = [...messages, userMessage];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyB0XIeP2uRbrdzdI3KsC4b7w9XhMJwhVRo\",\r\n        {\r\n          contents: [\r\n            {\r\n              role: \"user\",\r\n              parts: [\r\n                {\r\n                  text: 'आप एक सहायक हैं जो भारत सरकार की योजनाओं की जानकारी बहुत ही सरल हिंदी में गरीब लोगों को समझाते हैं।\\n\\nसवाल: ${input}\\n\\nकृपया उत्तर आसान हिंदी में दें।',\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n          generationConfig: {\r\n            temperature: 0.7,\r\n            maxOutputTokens: 512,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const botReply =\r\n        response.data.candidates?.[0]?.content?.parts?.[0]?.text ||\r\n        \"माफ़ कीजिए, उत्तर नहीं मिल पाया।\";\r\n\r\n      setMessages([...newMessages, { sender: \"bot\", text: botReply }]);\r\n    } catch (error) {\r\n      console.error(\"Gemini API Error:\", error);\r\n      setMessages([\r\n        ...newMessages,\r\n        {\r\n          sender: \"bot\",\r\n          text: \"माफ़ कीजिए, कुछ गलत हो गया। कृपया बाद में कोशिश करें।\",\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  const startListening = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech Recognition not supported in this browser.\");\r\n      return;\r\n    }\r\n\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"hi-IN\";\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onstart = () => {\r\n      setListening(true);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      const speechToText = event.results[0][0].transcript;\r\n      setInput((prevInput) => prevInput + \" \" + speechToText);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Voice recognition error:\", event.error);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setListening(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n    recognition.start();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10 px-4\">\r\n      <div className=\"max-w-3xl mx-auto bg-white shadow-lg rounded-xl p-6\">\r\n        <h1 className=\"text-3xl font-bold text-green-700 text-center mb-6\">\r\n          💬 सहायता चैटबॉट\r\n        </h1>\r\n\r\n        <div className=\"h-96 overflow-y-auto space-y-4 bg-gray-50 p-4 rounded-md border\">\r\n          {messages.map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`p-3 rounded-md max-w-xs whitespace-pre-wrap ${\r\n                msg.sender === \"user\"\r\n                  ? \"bg-green-200 ml-auto text-right\"\r\n                  : \"bg-white text-left\"\r\n              }`}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n          {loading && <p className=\"text-gray-500\">उत्तर आ रहा है...</p>}\r\n        </div>\r\n\r\n        <div className=\"mt-4 flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border border-gray-300 rounded-l-md px-4 py-2 focus:outline-none\"\r\n            placeholder=\"अपना सवाल लिखें...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n          <button\r\n            onClick={startListening}\r\n            className={`bg-yellow-500 text-white px-4 py-2 ${\r\n              listening ? \"animate-pulse\" : \"\"\r\n            }`}\r\n            title=\"Speak\"\r\n          >\r\n            🎙\r\n          </button>\r\n          <button\r\n            onClick={sendMessage}\r\n            className=\"bg-green-600 text-white px-6 py-2 rounded-r-md hover:bg-green-700\"\r\n          >\r\n            भेजें\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
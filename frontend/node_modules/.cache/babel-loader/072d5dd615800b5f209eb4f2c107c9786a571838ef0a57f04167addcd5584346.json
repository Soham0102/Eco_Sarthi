{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soham\\\\Downloads\\\\EcoSarthi-main (2)\\\\EcoSarthi-main (3)\\\\EcoSarthi-main\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // location select handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Autocomplete */}\n//         <PlacesAutocomplete\n//           value={formData.location}\n//           onChange={(address) => setFormData({ ...formData, location: address })}\n//           onSelect={handleSelect}\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n//         >\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//             <div>\n//               <input\n//                 {...getInputProps({\n//                   placeholder: \"Search Location (India only)\",\n//                   className: \"w-full border px-3 py-2 rounded\",\n//                 })}\n//               />\n//               <div className=\"border rounded bg-white mt-1\">\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                 {suggestions.map((suggestion) => {\n//                   const className = suggestion.active\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\n//                     : \"p-2 cursor-pointer\";\n//                   return (\n//                     <div\n//                       {...getSuggestionItemProps(suggestion, { className })}\n//                       key={suggestion.placeId}\n//                     >\n//                       {suggestion.description}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             </div>\n//           )}\n//         </PlacesAutocomplete>\n\n//         {/* Department */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         {/* Urgency */}\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         {/* Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState, createElement as _createElement } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    complaint: \"\",\n    location: \"\",\n    urgency: \"normal\",\n    department: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n\n  // Google Places Autocomplete handler\n  const handleSelect = async address => {\n    setFormData({\n      ...formData,\n      location: address\n    });\n    setLiveCoords(null); // Clear live coords if user selects an address\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      console.log(\"Selected Location Coordinates: \", latLng);\n      // You can store these coords in state if your backend needs them\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n\n  // Live location button handler\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLiveCoords({\n        latitude,\n        longitude\n      });\n      setFormData({\n        ...formData,\n        location: \"Live Location Captured\"\n      });\n      alert(\"Live location successfully captured!\");\n      setIsSubmitting(false);\n    }, error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"âš  Location not available. Please enable GPS for accurate location.\");\n      setLiveCoords(null);\n      setIsSubmitting(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      const formDataToSend = new FormData();\n      Object.keys(formData).forEach(key => {\n        formDataToSend.append(key, formData[key]);\n      });\n      // Backend expects 'description'; mirror from 'complaint'\n      if (formData.complaint && !formData.description) {\n        formDataToSend.append(\"description\", formData.complaint);\n      }\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n\n      // Logic to determine which location to send\n      let latLng = null;\n      if (liveCoords) {\n        // Option 1: Live location is captured\n        latLng = liveCoords;\n      } else if (formData.location) {\n        // Option 2: User typed and selected a location\n        const results = await geocodeByAddress(formData.location);\n        latLng = await getLatLng(results[0]);\n      }\n      if (latLng) {\n        formDataToSend.append(\"latitude\", latLng.latitude);\n        formDataToSend.append(\"longitude\", latLng.longitude);\n      }\n\n      // include citizenId if logged in so backend can award points\n      const citizenId = localStorage.getItem('citizenId');\n      if (citizenId) formDataToSend.append('citizenId', citizenId);\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setComplaintId(res.data.complaintId);\n      setSubmitted(true);\n      alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaintId}`);\n\n      // Reset form\n      setFormData({\n        name: \"\",\n        complaint: \"\",\n        location: \"\",\n        urgency: \"normal\",\n        department: \"\"\n      });\n      setPhoto(null);\n      setLiveCoords(null);\n    } catch (err) {\n      console.error(\"Submission failed:\", err.message);\n      alert(\"Complaint submission failed. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Complaint Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Your Name\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"complaint\",\n        value: formData.complaint,\n        onChange: handleChange,\n        placeholder: \"Describe your complaint\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: formData.location,\n            onChange: address => {\n              setFormData({\n                ...formData,\n                location: address\n              });\n              setLiveCoords(null);\n            },\n            onSelect: handleSelect,\n            searchOptions: {\n              componentRestrictions: {\n                country: [\"in\"]\n              }\n            },\n            children: ({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps({\n                  placeholder: \"Search Location...\",\n                  className: \"w-full border px-3 py-2 rounded\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-white mt-1\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 text-gray-500\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 33\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? \"p-2 bg-blue-100 cursor-pointer\" : \"p-2 cursor-pointer\";\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      className\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 25\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLiveLocation,\n            disabled: isSubmitting,\n            className: `px-4 py-2 rounded text-sm text-white ${isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"}`,\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), liveCoords && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: [\"Live Location: \", liveCoords.latitude.toFixed(4), \", \", liveCoords.longitude.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"department\",\n        value: formData.department,\n        onChange: handleChange,\n        className: \"w-full border px-3 py-2 rounded\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Public Works\",\n          children: \"Public Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Water Supply\",\n          children: \"Water Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sanitation\",\n          children: \"Sanitation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Electricity\",\n          children: \"Electricity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"urgency\",\n        value: formData.urgency,\n        onChange: handleChange,\n        className: \"w-full border px-3 py-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"normal\",\n          children: \"Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"urgent\",\n          children: \"Urgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Upload / Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          capture: \"environment\",\n          onChange: handlePhotoChange,\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), photo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Selected: \", photo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: `w-full ${isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"} text-white px-4 py-2 rounded hover:bg-blue-700`,\n        children: isSubmitting ? \"Submitting...\" : \"Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-green-700 font-semibold\",\n      children: [\"Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 44\n      }, this), \"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: complaintId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"x5XnvUr8eY4YI+vK4uqzf0cWoN0=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","createElement","_createElement","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","name","complaint","location","urgency","department","photo","setPhoto","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","liveCoords","setLiveCoords","handleChange","e","target","value","handlePhotoChange","files","handleSelect","address","results","latLng","console","log","error","handleLiveLocation","navigator","geolocation","alert","getCurrentPosition","position","latitude","longitude","coords","warn","enableHighAccuracy","timeout","maximumAge","handleSubmit","preventDefault","formDataToSend","FormData","Object","keys","forEach","key","append","description","citizenId","localStorage","getItem","res","post","headers","data","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","placeId","__self","__source","type","onClick","disabled","toFixed","accept","capture","_c","$RefreshReg$"],"sources":["C:/Users/soham/Downloads/EcoSarthi-main (2)/EcoSarthi-main (3)/EcoSarthi-main/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // location select handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Autocomplete */}\n//         <PlacesAutocomplete\n//           value={formData.location}\n//           onChange={(address) => setFormData({ ...formData, location: address })}\n//           onSelect={handleSelect}\n//           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n//         >\n//           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//             <div>\n//               <input\n//                 {...getInputProps({\n//                   placeholder: \"Search Location (India only)\",\n//                   className: \"w-full border px-3 py-2 rounded\",\n//                 })}\n//               />\n//               <div className=\"border rounded bg-white mt-1\">\n//                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                 {suggestions.map((suggestion) => {\n//                   const className = suggestion.active\n//                     ? \"p-2 bg-blue-100 cursor-pointer\"\n//                     : \"p-2 cursor-pointer\";\n//                   return (\n//                     <div\n//                       {...getSuggestionItemProps(suggestion, { className })}\n//                       key={suggestion.placeId}\n//                     >\n//                       {suggestion.description}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             </div>\n//           )}\n//         </PlacesAutocomplete>\n\n//         {/* Department */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         {/* Urgency */}\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         {/* Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nexport default function ComplaintForm() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    complaint: \"\",\n    location: \"\",\n    urgency: \"normal\",\n    department: \"\",\n  });\n\n  const [photo, setPhoto] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handlePhotoChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n\n  // Google Places Autocomplete handler\n  const handleSelect = async (address) => {\n    setFormData({ ...formData, location: address });\n    setLiveCoords(null); // Clear live coords if user selects an address\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      console.log(\"Selected Location Coordinates: \", latLng);\n      // You can store these coords in state if your backend needs them\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n\n  // Live location button handler\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setLiveCoords({ latitude, longitude });\n        setFormData({ ...formData, location: \"Live Location Captured\" });\n        alert(\"Live location successfully captured!\");\n        setIsSubmitting(false);\n      },\n      (error) => {\n        console.warn(\"Geolocation error:\", error);\n        alert(\"âš  Location not available. Please enable GPS for accurate location.\");\n        setLiveCoords(null);\n        setIsSubmitting(false);\n      },\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const formDataToSend = new FormData();\n      Object.keys(formData).forEach((key) => {\n        formDataToSend.append(key, formData[key]);\n      });\n      // Backend expects 'description'; mirror from 'complaint'\n      if (formData.complaint && !formData.description) {\n        formDataToSend.append(\"description\", formData.complaint);\n      }\n\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n\n      // Logic to determine which location to send\n      let latLng = null;\n      if (liveCoords) {\n        // Option 1: Live location is captured\n        latLng = liveCoords;\n      } else if (formData.location) {\n        // Option 2: User typed and selected a location\n        const results = await geocodeByAddress(formData.location);\n        latLng = await getLatLng(results[0]);\n      }\n\n      if (latLng) {\n        formDataToSend.append(\"latitude\", latLng.latitude);\n        formDataToSend.append(\"longitude\", latLng.longitude);\n      }\n\n      // include citizenId if logged in so backend can award points\n      const citizenId = localStorage.getItem('citizenId');\n      if (citizenId) formDataToSend.append('citizenId', citizenId);\n\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      setComplaintId(res.data.complaintId);\n      setSubmitted(true);\n      alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaintId}`);\n\n      // Reset form\n      setFormData({\n        name: \"\",\n        complaint: \"\",\n        location: \"\",\n        urgency: \"normal\",\n        department: \"\",\n      });\n      setPhoto(null);\n      setLiveCoords(null);\n    } catch (err) {\n      console.error(\"Submission failed:\", err.message);\n      alert(\"Complaint submission failed. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Input fields */}\n        <input\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          placeholder=\"Your Name\"\n          required\n          className=\"w-full border px-3 py-2 rounded\"\n        />\n        <textarea\n          name=\"complaint\"\n          value={formData.complaint}\n          onChange={handleChange}\n          placeholder=\"Describe your complaint\"\n          required\n          className=\"w-full border px-3 py-2 rounded\"\n        />\n\n        {/* Location Section */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Location\n          </label>\n          <div className=\"flex gap-2\">\n            <PlacesAutocomplete\n              value={formData.location}\n              onChange={(address) => {\n                setFormData({ ...formData, location: address });\n                setLiveCoords(null);\n              }}\n              onSelect={handleSelect}\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n            >\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                <div className=\"w-full\">\n                  <input\n                    {...getInputProps({\n                      placeholder: \"Search Location...\",\n                      className: \"w-full border px-3 py-2 rounded\",\n                    })}\n                  />\n                  <div className=\"border rounded bg-white mt-1\">\n                    {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n                    {suggestions.map((suggestion) => {\n                      const className = suggestion.active\n                        ? \"p-2 bg-blue-100 cursor-pointer\"\n                        : \"p-2 cursor-pointer\";\n                      return (\n                        <div\n                          {...getSuggestionItemProps(suggestion, { className })}\n                          key={suggestion.placeId}\n                        >\n                          {suggestion.description}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </PlacesAutocomplete>\n            <button\n              type=\"button\"\n              onClick={handleLiveLocation}\n              disabled={isSubmitting}\n              className={`px-4 py-2 rounded text-sm text-white ${\n                isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n              }`}\n            >\n              Live\n            </button>\n          </div>\n          {liveCoords && (\n            <p className=\"text-xs text-green-600 mt-1\">\n              Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n            </p>\n          )}\n        </div>\n\n        {/* Other form elements */}\n        <select\n          name=\"department\"\n          value={formData.department}\n          onChange={handleChange}\n          className=\"w-full border px-3 py-2 rounded\"\n          required\n        >\n          <option value=\"\">Select a Department</option>\n          <option value=\"Public Works\">Public Works</option>\n          <option value=\"Water Supply\">Water Supply</option>\n          <option value=\"Sanitation\">Sanitation</option>\n          <option value=\"Electricity\">Electricity</option>\n          <option value=\"Other\">Other</option>\n        </select>\n\n        <select\n          name=\"urgency\"\n          value={formData.urgency}\n          onChange={handleChange}\n          className=\"w-full border px-3 py-2 rounded\"\n        >\n          <option value=\"normal\">Normal</option>\n          <option value=\"urgent\">Urgent</option>\n        </select>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Upload / Capture Photo\n          </label>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            capture=\"environment\"\n            onChange={handlePhotoChange}\n            className=\"w-full border px-3 py-2 rounded\"\n          />\n          {photo && (\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className={`w-full ${\n            isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n          } text-white px-4 py-2 rounded hover:bg-blue-700`}\n        >\n          {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n        </button>\n      </form>\n\n      {submitted && (\n        <div className=\"mt-6 text-green-700 font-semibold\">\n          Complaint submitted successfully!<br />\n          Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAAC,aAAA,IAAAC,cAAA,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
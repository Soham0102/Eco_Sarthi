{"ast":null,"code":"import React from\"react\";import{Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function ProtectedRoute(_ref){let{children,requireAdmin=false,requireWorker=false}=_ref;const isAdmin=localStorage.getItem(\"isAdmin\")===\"true\";const isWorker=localStorage.getItem(\"isWorker\")===\"true\";// Admin-only routes\nif(requireAdmin&&!isAdmin){console.warn(\"Blocked non-admin access. Redirecting...\");return/*#__PURE__*/_jsx(Navigate,{to:\"/admin-login\",replace:true});}// Worker-only routes\nif(requireWorker&&!isWorker){console.warn(\"Blocked non-worker access. Redirecting...\");return/*#__PURE__*/_jsx(Navigate,{to:\"/worker-login\",replace:true});}// General protected routes (admin or worker)\nif(!requireAdmin&&!requireWorker&&!isAdmin&&!isWorker){console.warn(\"Blocked unauthorized access. Redirecting...\");return/*#__PURE__*/_jsx(Navigate,{to:\"/user-login\",replace:true});}return children;}","map":{"version":3,"names":["React","Navigate","jsx","_jsx","ProtectedRoute","_ref","children","requireAdmin","requireWorker","isAdmin","localStorage","getItem","isWorker","console","warn","to","replace"],"sources":["C:/Users/Lenovo/Documents/EcoSarthi-main/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function ProtectedRoute({ children, requireAdmin = false, requireWorker = false }) {\n  const isAdmin = localStorage.getItem(\"isAdmin\") === \"true\";\n  const isWorker = localStorage.getItem(\"isWorker\") === \"true\";\n\n  // Admin-only routes\n  if (requireAdmin && !isAdmin) {\n    console.warn(\"Blocked non-admin access. Redirecting...\");\n    return <Navigate to=\"/admin-login\" replace />;\n  }\n\n  // Worker-only routes\n  if (requireWorker && !isWorker) {\n    console.warn(\"Blocked non-worker access. Redirecting...\");\n    return <Navigate to=\"/worker-login\" replace />;\n  }\n\n  // General protected routes (admin or worker)\n  if (!requireAdmin && !requireWorker && !isAdmin && !isWorker) {\n    console.warn(\"Blocked unauthorized access. Redirecting...\");\n    return <Navigate to=\"/user-login\" replace />;\n  }\n\n  return children;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,cAAe,SAAS,CAAAC,cAAcA,CAAAC,IAAA,CAA4D,IAA3D,CAAEC,QAAQ,CAAEC,YAAY,CAAG,KAAK,CAAEC,aAAa,CAAG,KAAM,CAAC,CAAAH,IAAA,CAC9F,KAAM,CAAAI,OAAO,CAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,GAAK,MAAM,CAC1D,KAAM,CAAAC,QAAQ,CAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAAK,MAAM,CAE5D;AACA,GAAIJ,YAAY,EAAI,CAACE,OAAO,CAAE,CAC5BI,OAAO,CAACC,IAAI,CAAC,0CAA0C,CAAC,CACxD,mBAAOX,IAAA,CAACF,QAAQ,EAACc,EAAE,CAAC,cAAc,CAACC,OAAO,MAAE,CAAC,CAC/C,CAEA;AACA,GAAIR,aAAa,EAAI,CAACI,QAAQ,CAAE,CAC9BC,OAAO,CAACC,IAAI,CAAC,2CAA2C,CAAC,CACzD,mBAAOX,IAAA,CAACF,QAAQ,EAACc,EAAE,CAAC,eAAe,CAACC,OAAO,MAAE,CAAC,CAChD,CAEA;AACA,GAAI,CAACT,YAAY,EAAI,CAACC,aAAa,EAAI,CAACC,OAAO,EAAI,CAACG,QAAQ,CAAE,CAC5DC,OAAO,CAACC,IAAI,CAAC,6CAA6C,CAAC,CAC3D,mBAAOX,IAAA,CAACF,QAAQ,EAACc,EAAE,CAAC,aAAa,CAACC,OAAO,MAAE,CAAC,CAC9C,CAEA,MAAO,CAAAV,QAAQ,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}